image: node:20

variables:
  GIT_STRATEGY: fetch

stages:
  - lint
  - test
  - build
  - e2e
  - performance

# ─────────────────────────────────────────────────────────────────────────
# 1) LINT + SECURITY CHECKS
# ─────────────────────────────────────────────────────────────────────────
lint-security:
  stage: lint
  script:
    - npm ci
    - npm run lint:ci

# ─────────────────────────────────────────────────────────────────────────
# 2) JEST TESTS (UNIT, INTEGRATION, I18N)
# ─────────────────────────────────────────────────────────────────────────
jest-tests:
  stage: test
  script:
    - npm ci
    - npm run test:unit
    - npm run test:integration
    - npm run test:i18n

# ─────────────────────────────────────────────────────────────────────────
# 3) BUILD NEXT.JS DOCKER IMAGE
# ─────────────────────────────────────────────────────────────────────────
build-nextjs:
  stage: build
  script:
    - npm ci
    - npm run build
    - docker build -t frontend-testing-framework:latest .
    - docker save frontend-testing-framework:latest -o image.tar
  artifacts:
    paths:
      - image.tar
    expire_in: 1 day

# ─────────────────────────────────────────────────────────────────────────
# 4) E2E / VISUAL / ACCESSIBILITY TESTS USING DOCKER
# ─────────────────────────────────────────────────────────────────────────
e2e-tests:
  stage: e2e
  image: cypress/browsers:node-20.9.0-chrome-118.0.5993.88-1-ff-118.0.2-edge-118.0.2088.46-1
  services:
    - docker:dind
  dependencies:
    - build-nextjs
  script:
    - npm ci
    - docker load -i image.tar
    - docker run -d --name myapp -p 3000:3000 frontend-testing-framework:latest
    - |
      # Wait until Next.js is up and running
      until curl -s localhost:3000 | grep -q "Next.js"; do 
        echo "Waiting for Next.js to start...";
        sleep 5;
      done
    - npm run test:e2e:chrome
    - npm run test:visual:initial
    - npm run test:visual
    - npm run test:accessibility
    - docker stop myapp && docker rm myapp
  artifacts:
    paths:
      - cypress/screenshots
      - cypress/videos
    expire_in: 1 week

# ─────────────────────────────────────────────────────────────────────────
# 5) PERFORMANCE TESTS (LIGHTHOUSE)
# ─────────────────────────────────────────────────────────────────────────
performance-tests:
  stage: performance
  image: cypress/browsers:node-20.9.0-chrome-118.0.5993.88-1-ff-118.0.2-edge-118.0.2088.46-1
  services:
    - docker:dind
  dependencies:
    - build-nextjs
  script:
    - npm ci
    - docker load -i image.tar
    - docker run -d --name myapp -p 3000:3000 frontend-testing-framework:latest
    - |
      # Wait until Next.js is up and running
      until curl -s localhost:3000 | grep -q "Next.js"; do 
        echo "Waiting for Next.js to start...";
        sleep 5;
      done
    - npm install -g lighthouse
    - mkdir -p ./tmp/artifacts
    - lighthouse http://localhost:3000 --chrome-flags="--no-sandbox --headless=new" --output json --output html --output-path ./tmp/artifacts/lighthouse-report
    - docker stop myapp && docker rm myapp
  artifacts:
    paths:
      - ./tmp/artifacts
    expire_in: 1 week
